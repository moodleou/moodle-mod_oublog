define("mod_oublog/tagselector",["exports","core/str"],(function(_exports,_str){function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;class TagSelector{constructor(inputId,data){var _this=this;_defineProperty(this,"createDropdownWrapper",(()=>{const wrapper=document.createElement("div");return wrapper.className="autocomplete-dropdown-wrapper",document.body.appendChild(wrapper),wrapper})),_defineProperty(this,"createDropdown",(()=>{const dropdown=document.createElement("ul");return dropdown.className="autocomplete-dropdown",this.setAttributes(dropdown,{id:this.input.id+"_results",role:"listbox",tabindex:0}),this.dropdownWrapper.appendChild(dropdown),dropdown})),_defineProperty(this,"attachInputEvents",(()=>{this.input.addEventListener("focus",(()=>this.onFocus())),this.input.addEventListener("input",(()=>this.onInput())),this.input.addEventListener("keydown",(e=>this.onKeyDown(e))),this.input.addEventListener("blur",(()=>this.onBlurInput())),this.dropdown.addEventListener("click",(e=>this.onDropdownItemClick(e))),document.addEventListener("click",(e=>this.onDocumentClick(e))),window.addEventListener("resize",(()=>this.updateDropdownPosition()))})),_defineProperty(this,"onFocus",(()=>{this.filterData(),this.updateDropdownPosition(),this.showDropdown()})),_defineProperty(this,"onInput",(()=>{this.filterData(this.getLastInputPortion()),this.updateDropdownPosition(),this.showDropdown()})),_defineProperty(this,"onKeyDown",(event=>{const items=this.dropdown.querySelectorAll(".autocomplete-item");if(0!==items.length)switch(event.key){case"ArrowDown":this.navigateDown(items);break;case"ArrowUp":this.navigateUp(items);break;case"Escape":this.hideDropdown();break;case"Enter":event.preventDefault(),this.selectItem(items)}})),_defineProperty(this,"navigateDown",(items=>{this.activeIndex=(this.activeIndex+1)%items.length,this.setActiveItem(this.activeIndex)})),_defineProperty(this,"navigateUp",(items=>{this.activeIndex=(this.activeIndex-1+items.length)%items.length,this.setActiveItem(this.activeIndex)})),_defineProperty(this,"selectItem",(items=>{this.activeIndex>=0&&this.insertItem({target:items[this.activeIndex]})})),_defineProperty(this,"onDropdownItemClick",(event=>{this.insertItem(event)})),_defineProperty(this,"onBlurInput",(()=>{setTimeout((()=>{const isInput=this.input===document.activeElement,isDropdown=this.dropdownWrapper.contains(document.activeElement);isInput||isDropdown||this.hideDropdown()}),100)})),_defineProperty(this,"onDocumentClick",(e=>{this.input.contains(e.target)||e.target.closest(".autocomplete-item")||this.hideDropdown()})),_defineProperty(this,"showDropdown",(()=>{this.dropdownWrapper.style.display="block",this.setAttributes(this.input,{"aria-expanded":"true"})})),_defineProperty(this,"hideDropdown",(()=>{this.dropdownWrapper.style.display="none",this.setAttributes(this.input,{"aria-expanded":"false","aria-activedescendant":""}),this.activeIndex=-1})),_defineProperty(this,"highlightMatch",(suggestion=>{let query=this.getLastInputPortion();const startIdx=suggestion.toLowerCase().indexOf(query.toLowerCase()),endIdx=startIdx+query.length;return suggestion.slice(0,startIdx)+"<strong>"+suggestion.slice(startIdx,endIdx)+"</strong>"+suggestion.slice(endIdx)})),_defineProperty(this,"filterData",(function(){let query=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",existingValues=_this.cleanInputValue().split(",").map((value=>value.trim())).filter((value=>""!==value));_this.filteredData=_this.data.filter((item=>item.tag.toLowerCase().includes(query.toLowerCase())&&!existingValues.includes(item.tag))),_this.renderDropdown()})),_defineProperty(this,"cleanInputValue",(()=>{let value=this.input.value.trim();return value.endsWith(",")&&(value=value.slice(0,-1).trim()),value})),_defineProperty(this,"getLastInputPortion",(()=>this.input.value.trim().split(",").pop().trim())),_defineProperty(this,"renderDropdown",(()=>{this.dropdown.innerHTML="",this.filteredData.forEach((item=>{const li=document.createElement("li");li.className="autocomplete-item",this.setAttributes(li,{role:"option",tabindex:-1,id:"autocomplete-item-".concat(item.id),"aria-selected":"false"});const resultDiv=document.createElement("div");resultDiv.className="autocomplete_result";const titleSpan=document.createElement("span");titleSpan.className="autocomplete_result_title",titleSpan.innerHTML=this.highlightMatch(item.tag),resultDiv.appendChild(titleSpan);const countSpan=document.createElement("span");countSpan.className="autocomplete_result_info",(0,_str.getString)("numposts","oublog",item.count).then((numpost=>{countSpan.textContent=numpost})),resultDiv.appendChild(countSpan),li.appendChild(resultDiv),this.dropdown.appendChild(li)}))})),_defineProperty(this,"setActiveItem",(index=>{this.dropdown.querySelectorAll(".autocomplete-item").forEach(((item,i)=>{const isActive=i===index;this.setAttributes(item,{"aria-selected":isActive?"true":"false"}),item.classList.toggle("active",isActive),isActive&&this.setAttributes(this.input,{"aria-activedescendant":item.id})}))})),_defineProperty(this,"insertItem",(event=>{const selectedItemTag=event.target.closest(".autocomplete-item").querySelector(".autocomplete_result_title").textContent;if(!selectedItemTag)return;let inputValueParts=this.input.value.trim().split(",").map((item=>item.trim()));inputValueParts[inputValueParts.length-1]=selectedItemTag,this.input.value=inputValueParts.join(", ")+", ",this.input.focus(),this.filterData(),this.activeIndex=-1})),_defineProperty(this,"updateDropdownPosition",(()=>{const rect=this.input.getBoundingClientRect(),scrollTop=document.documentElement.scrollTop;this.dropdownWrapper.style.position="absolute",this.dropdownWrapper.style.top="".concat(rect.bottom+scrollTop,"px"),this.dropdownWrapper.style.left="".concat(rect.left,"px"),this.dropdownWrapper.style.width="".concat(rect.width,"px")})),_defineProperty(this,"setAttributes",((el,object)=>{for(let key in object)el.setAttribute(key,object[key])})),this.input=document.getElementById(inputId),this.data=data,this.filteredData=[...data],this.dropdownWrapper=this.createDropdownWrapper(),this.dropdown=this.createDropdown(),this.setAttributes(this.input,{"aria-owns":this.dropdown.id,"aria-expanded":"false","aria-autocomplete":"list",role:"combobox"}),this.activeIndex=-1,this.attachInputEvents()}}_exports.init=(inputID,data)=>{const dataArray=Array.isArray(data)?data:Object.values(data);return new TagSelector(inputID,dataArray)}}));

//# sourceMappingURL=tagselector.min.js.map