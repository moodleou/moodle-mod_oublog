{"version":3,"file":"statsupdate.min.js","sources":["../src/statsupdate.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport Pending from 'core/pending';\nimport * as FormChangeChecker from 'core_form/changechecker';\n\n/**\n * Moodle renderer used to display special elements of the blog\n *\n * @module    mod_oublog/statusupdate\n * @copyright 2024 The Open University\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n **/\n\n/**\n * Initialise the statsupdate form.\n *\n * @param {string} container_class The class of the container to update.\n */\nexport const init = (container_class) => {\n    let content = document.querySelector('.oublog_statsview_content_' + container_class);\n    if (content) {\n        const form = content.querySelector('form.mform');\n        form.addEventListener('submit', (event) => {\n            event.preventDefault();\n            const pendingPromiseAjax = new Pending('mod_oublog/statsupdate');\n            // Add an ajax 'spinner'.\n            let div = document.createElement('div');\n            div.classList.add('ajaxworking');\n            let pos = event.target.querySelector('div.row.fitem:last-child div:last-child');\n            if (pos) {\n                pos.appendChild(div);\n            }\n            const id = form.querySelector('input[name=id]');\n            const currentcmid = form.querySelector('input[name=currentcmid]');\n            let args = {\n                type: form.querySelector('input[name=type]').value,\n                id: 0,\n                currentcmid: 0,\n            };\n            if (id) {\n                args.id = id.value;\n            }\n            if (currentcmid) {\n                args.currentcmid = currentcmid.value;\n            }\n            const formData = new FormData(form);\n            fetch('stats_update.php', {\n                method: 'POST',\n                body: formData\n            }).then(response => response.json())\n                .then(response => {\n                    statsupdate_killspinner(false);\n                    try {\n                        if (response.containerclass &&\n                            !content.classList.contains(response.containerclass)) {\n                            // Mismatch between data and caller.\n                            content = document.querySelector('.' + response.containerclass);\n                        }\n                        if (response.subtitle && response.subtitleclass) {\n                            const subtitle = content.querySelector('.' + response.subtitleclass);\n                            if (subtitle) {\n                                subtitle.innerHTML = response.subtitle;\n                            }\n                        }\n                        if (response.info && response.infoclass) {\n                            const info = content.querySelector('.' + response.infoclass);\n                            if (info) {\n                                info.innerHTML = response.info;\n                            }\n                        }\n                        if ((response.content || response.content === '') && response.contentclass) {\n                            const innercontent = content.querySelector('.' + response.contentclass);\n                            if (innercontent) {\n                                innercontent.innerHTML = response.content;\n                            }\n                        }\n                    } catch (e) {\n                        statsupdate_killspinner(true);\n                        // eslint-disable-next-line no-console\n                        console.log(e);\n                        pendingPromiseAjax.resolve();\n                        return;\n                    }\n                    pendingPromiseAjax.resolve();\n                })\n                .catch(() => {\n                    statsupdate_killspinner(true);\n                    pendingPromiseAjax.resolve();\n                });\n            const statsupdate_killspinner = (submit) => {\n                const spinner = form.querySelector('.ajaxworking');\n                if (spinner) {\n                    spinner.remove(true);\n                }\n                if (submit) {\n                    // Manual form submission fallback.\n                    FormChangeChecker.disableAllChecks();\n                    form.submit();\n                }\n            };\n        });\n    }\n};\n"],"names":["e","_getRequireWildcardCache","WeakMap","r","t","_pending","__esModule","default","FormChangeChecker","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_exports","init","container_class","content","document","querySelector","form","addEventListener","event","preventDefault","pendingPromiseAjax","Pending","div","createElement","classList","add","pos","target","appendChild","id","currentcmid","args","type","value","formData","FormData","fetch","method","body","then","response","json","statsupdate_killspinner","containerclass","contains","subtitle","subtitleclass","innerHTML","info","infoclass","contentclass","innercontent","console","log","resolve","catch","submit","spinner","remove","disableAllChecks"],"mappings":"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"}